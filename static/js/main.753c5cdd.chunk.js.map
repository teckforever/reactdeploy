{"version":3,"sources":["PaginaMaestra/Header.js","PaginasApp/Home.js","Componentes/Carga.js","Componentes/TarjetaDatoAPI.js","PaginasApp/DatosAPI.js","PaginasApp/DatoTarjetaAPI.js","Store/StoreMascotas.js","Componentes/RenderTablaDatos.js","Componentes/ContenedorListas.js","PaginasApp/Mascotas.js","PaginasApp/Graficos.js","Rutas/Rutas.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","Home","useEffect","console","log","Carga","TarjetaDatoAPI","props","id","title","DatosAPI","useState","datosAPI","setDatosAPI","cargaDatos","setCargaDatos","ObtenerdatosAPI","a","axios","get","DatosObtenidos","data","estadoDatos","status","alert","mapeoDatosAPI","map","index","key","length","DatoTarjetaAPI","useParams","datosTarjeta","setDatosTarjeta","datos","datoObtenido","ObtenerDatosTarjeta","createContext","Provider","Consumer","RenderTablaDatos","value","mapeoDatos","i","scope","ContenedorListas","Mascotas","mascotas","setMascotas","ObtenerMascotasJSON","Promise","response","reject","setTimeout","MascotasJSON","Graficos","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","options","maintainAspectRatio","Rutas","path","component","exact","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.753c5cdd.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport '../EstilosApp/Header.css'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className=\"menu-aplicacion\">\r\n\r\n            <div className=\"cont-menu\">\r\n                <Link to=\"/reactdeploy/\">Inicio</Link>\r\n                <Link to=\"/DatosAPI\">Datos</Link>\r\n                <Link to=\"/Context\">Context</Link>\r\n                <Link to=\"/Graficos\">Graficos</Link>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport '../EstilosApp/Home.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport const Home = () => {\r\n\r\n    useEffect(() => {\r\n        console.log(\"UseEffect Home Act\")\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"contenedor-home\">\r\n            <Link to={'/DatosAPI'}>Ingresar</Link>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport '../EstilosApp/Carga.css'\r\nexport const Carga = () => {\r\n    return (\r\n        <div className=\"contenedor-ring\">\r\n            <div className=\"lds-dual-ring\"></div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const TarjetaDatoAPI = (props) => {\r\n    return (\r\n        <div className=\"col-md-3 mt-3\">\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                   <Link to={`/DatosAPI/${props.id}`}>{props.id} - {props.title}</Link> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport '../EstilosApp/DatosAPI.css'\r\nimport { Carga } from '../Componentes/Carga'\r\n\r\nimport axios from 'axios'\r\n\r\n\r\nimport { TarjetaDatoAPI } from '../Componentes/TarjetaDatoAPI'\r\n\r\nexport const DatosAPI = () => {\r\n\r\n    const [datosAPI, setDatosAPI] = useState([])\r\n    const [cargaDatos, setCargaDatos] = useState(false)\r\n\r\n    useEffect(() => {\r\n        console.log(\"UseEffect DatosAPI Act\")\r\n        ObtenerdatosAPI()\r\n    }, [])\r\n\r\n\r\n    const ObtenerdatosAPI = async () => {\r\n\r\n        try {\r\n            let datosAPI = await axios.get('https://jsonplaceholder.typicode.com/todos/')\r\n            let DatosObtenidos = datosAPI.data\r\n            let estadoDatos = datosAPI.status\r\n            console.log(estadoDatos)\r\n            setCargaDatos(true)\r\n            setDatosAPI(DatosObtenidos)\r\n        } catch (e) {\r\n            alert(\"No se pudo conectar con el servidor\", e)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    if (cargaDatos === false) {\r\n        return (\r\n            <Carga />\r\n        )\r\n    }\r\n\r\n    let mapeoDatosAPI = datosAPI.map((data, index) => {\r\n        return (\r\n            <TarjetaDatoAPI id={data.id} title={data.title} key={index} />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className='contenedor-DatosAPI'>\r\n            <div className=\"container-fluid\">\r\n                <span>DatosApi : {datosAPI.length}</span>\r\n                <div className=\"row\">\r\n                    {mapeoDatosAPI}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nexport const DatoTarjetaAPI = () => {\r\n\r\n    const { id } = useParams()\r\n    const [datosTarjeta, setDatosTarjeta] = useState({})\r\n    const [cargaDatos, setCargaDatos] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const ObtenerDatosTarjeta = async (id) => {\r\n\r\n            try {\r\n                let datos = await axios.get(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n                let datoObtenido = datos.data\r\n                setCargaDatos(true)\r\n                setDatosTarjeta(datoObtenido)\r\n            } catch (e) {\r\n                alert('No se puede conectar con el servidor')\r\n            }\r\n\r\n        }\r\n        ObtenerDatosTarjeta(id)\r\n        \r\n    }, [])\r\n\r\n\r\n\r\n\r\n    if (cargaDatos === false) {\r\n        return (\r\n            < div className=\"container-fluid mt-2\" >\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <span>Cargando tarjeta...</span>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid mt-2\">\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    {datosTarjeta.id} - {datosTarjeta.title}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import { createContext } from 'react'\r\n\r\nconst { Provider, Consumer } = createContext()\r\n\r\nexport { Provider }\r\n\r\nexport { Consumer }\r\n","import React from 'react'\r\n\r\nimport { Consumer } from '../Store/StoreMascotas'\r\n\r\n//Importar los datos aca\r\n\r\nexport const RenderTablaDatos = () => {\r\n    return (\r\n        <Consumer>\r\n            { value => {                \r\n\r\n                let mapeoDatos = value.map((data, i) => {\r\n                    return (\r\n                        <tr key={i}>\r\n                            <th scope=\"col\">{i}</th>\r\n                            <th scope=\"col\">{data}</th>\r\n                            <th scope=\"col\"><button className=\"btn btn-info\">Info</button></th>\r\n                        </tr>\r\n                    )\r\n                })\r\n\r\n                return (\r\n                    < table className=\"table\" >\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Mascota</th>\r\n                                <th scope=\"col\">Acciones</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {mapeoDatos}\r\n                        </tbody>\r\n                    </table >\r\n                )\r\n            }\r\n\r\n            }\r\n        </Consumer>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { RenderTablaDatos } from '../Componentes/RenderTablaDatos'\r\n\r\nexport const ContenedorListas = () => {\r\n    return (\r\n        <div className=\"cont-lista row\">\r\n            <div className=\"col-md-6\">\r\n                <RenderTablaDatos />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n                <RenderTablaDatos />\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Carga } from '../Componentes/Carga'\r\nimport MascotasJSON from '../DatosJson/Mascotas.json'\r\n\r\nimport { Provider } from '../Store/StoreMascotas'\r\n\r\nimport { ContenedorListas } from '../Componentes/ContenedorListas'\r\n\r\nexport const Mascotas = () => {\r\n\r\n    const [mascotas, setMascotas] = useState([])\r\n    const [cargaDatos, setCargaDatos] = useState(false)\r\n\r\n    useEffect(() => {\r\n        ObtenerMascotasJSON()\r\n    }, [])\r\n\r\n    const ObtenerMascotasJSON = () => {\r\n        new Promise((response, reject) => {\r\n            setTimeout(() => {\r\n                if (true) {\r\n                    response(MascotasJSON)\r\n                    setMascotas(MascotasJSON)\r\n                    setCargaDatos(true)\r\n                } else {\r\n                    reject('No se pudo obtener los datos')\r\n                    setCargaDatos(false)\r\n                }\r\n            }, 3000)\r\n        })\r\n    }\r\n\r\n    if (!cargaDatos) {\r\n        return <Carga></Carga>\r\n    }\r\n\r\n    return (\r\n        <div className=\"contenedor-mascotas\">\r\n            <h3 className=\"text-center\">Lista de mascotas {mascotas.length}</h3>\r\n\r\n            <Provider value={MascotasJSON}>\r\n                <ContenedorListas />\r\n            </Provider>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nexport const Graficos = () => {\r\n    const options = {\r\n        maintainAspectRatio: false\t// Don't maintain w/h ratio\r\n    }\r\n\r\n    const data = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [\r\n            {\r\n                label: 'My First dataset',\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                borderColor: 'rgba(75,192,192,1)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: [65, 59, 80, 81, 56, 55, 40]\r\n            }\r\n        ]\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            Graficos\r\n\r\n            <div>\r\n                <h2>Line Example</h2>\r\n                <Line data={data} options={options} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nimport { Home } from '../PaginasApp/Home'\r\nimport { DatosAPI } from '../PaginasApp/DatosAPI'\r\nimport { DatoTarjetaAPI } from '../PaginasApp/DatoTarjetaAPI'\r\nimport { Mascotas } from '../PaginasApp/Mascotas'\r\nimport { Graficos } from '../PaginasApp/Graficos'\r\n\r\n\r\nexport const Rutas = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path={'/DatosAPI/:id'} component={DatoTarjetaAPI} />\r\n            <Route exact path={'/reactdeploy/'} component={Home} />\r\n            <Route path={'/DatosAPI'} component={DatosAPI} />\r\n            <Route path={'/Context'} component={Mascotas} />\r\n            <Route path={'/Graficos'} component={Graficos} />\r\n        </Switch>\r\n    )\r\n}\r\n","import React from 'react'\nimport './EstilosApp/App.css'\nimport { Header } from './PaginaMaestra/Header'\nimport { Rutas } from './Rutas/Rutas'\n\nconst App = () => {\n  return (\n    <div className=\"contenedor-app\">\n      <Header />\n      <Rutas />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}